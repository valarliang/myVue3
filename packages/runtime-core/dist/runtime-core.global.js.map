{"version":3,"file":"runtime-core.global.js","sources":["../../shared/src/index.ts","../../reactivity/src/effect.ts","../../reactivity/src/reactive.ts","../../reactivity/src/computed.ts","../../reactivity/src/ref.ts","../src/createVNode.ts","../src/apiCreateApp.ts","../src/component.ts","../src/rendener.ts","../src/h.ts","../src/scheduler.ts","../src/apiWatch.ts"],"sourcesContent":["export function isObject(value) {\n  return typeof value === 'object' && value !== null\n}\n\nexport function isFunction(value) {\n  return typeof value === 'function'\n}\n\nexport function isString(value) {\n  return typeof value === 'string'\n}\n\nexport const toTypeString = (value: unknown): string =>\n  Object.prototype.toString.call(value)\n\nexport const hasChanged = (value: any, oldValue: any): boolean =>\n  !Object.is(value, oldValue)\n\nexport const isPlainObject = (val: unknown): val is object =>\n  toTypeString(val) === '[object Object]'\nexport const isMap = (val: unknown): val is Map<any, any> =>\n  toTypeString(val) === '[object Map]'\nexport const isSet = (val: unknown): val is Set<any> =>\n  toTypeString(val) === '[object Set]'\n\n// 通过 ShapeFlags[...] & component 校验组件类型\nexport const enum ShapeFlags {\n  ELEMENT = 1, // 元素\n  FUNCTIONAL_COMPONENT = 1 << 1, // 函数式组件\n  STATEFUL_COMPONENT = 1 << 2, // 普通组件\n  TEXT_CHILDREN = 1 << 3, // 孩子是文本\n  ARRAY_CHILDREN = 1 << 4, // 孩子是数组\n  SLOTS_CHILDREN = 1 << 5, // 组件插槽\n  TELEPORT = 1 << 6, // teleport组件\n  SUSPENSE = 1 << 7, // suspense组件\n  COMPONENT = ShapeFlags.STATEFUL_COMPONENT | ShapeFlags.FUNCTIONAL_COMPONENT \t// 组件\n}\n\nexport const hasOwn = (value,key) => Object.prototype.hasOwnProperty.call(value,key);","// effectStack作用（源码中通过 parent 属性实现）：\n// 1.配合 activedEffect 解决 effect 内部嵌套 effect 时收集的依赖属性属于哪个effect的问题\n// 2.记录当前effect实例，避免 fn 内赋值时触发 setter 重复执行 run()导致死循环\nconst effectStack = []\nexport let activedEffect // 保存当前执行的effect，以便收集依赖\nexport class ReactiveEffect {\n  active = true // 当前 effect 实例有用（有依赖项）\n  deps = [] // 记录当前 effect实例依赖的 响应属性 收集的 effect数组，用于取消当前effect的响应式调用\n  constructor(public fn, public scheduler?) { // ts会将 public 编译为 this.fn = fn\n    \n  }\n  run() {\n    if (!this.active) return this.fn // 虽然当前effect失活了，但调用 run 时依然要执行 fn\n    console.log('已在effectStack，不执行fn', effectStack.includes(this))\n    if (!effectStack.includes(this)) { // 避免 fn 内赋值时触发 setter 重复执行 run()导致死循环\n      try {\n        effectStack.push(activedEffect = this)\n        return this.fn() // 主线：触发用到的响应属性的 getter，执行 track()收集当前effect实例\n      } finally { // 解决 effect 内部嵌套 effect 时收集的依赖属性属于哪个effect的问题\n        effectStack.pop()\n        activedEffect = effectStack[effectStack.length - 1]\n      }\n    }\n  }\n  stop() {\n    if (this.active) {\n      for (const dep of this.deps) {\n        dep.delete(this)\n      }\n      this.active = false\n    }\n  }\n}\n\nconst targetMap = new WeakMap() // 响应属性收集的依赖集合：{ target1: { key1: [effect, ...], key2... }, target2... }\nexport function track(target, key) {\n  if (!activedEffect) return // 没有 effect（不是响应性的操作）不收集\n  let depsMap = targetMap.get(target)\n  if (!depsMap) {\n    targetMap.set(target, depsMap = new Map())\n  }\n  let dep = depsMap.get(key)\n  if (!dep) {\n    depsMap.set(key, dep = new Set()) // 源码中使用 createDep()\n  }\n  trackEffects(dep)\n}\n\nexport function trackEffects(dep) {\n  if (!dep.has(activedEffect)) {\n    dep.add(activedEffect) // 主线：收集当前 effect实例（dep为Set，也可写在判断外）\n    activedEffect.deps.push(dep) // 互相记录\n  }\n}\n\nexport function trigger(target, key) {\n  const depsMap = targetMap.get(target)\n  if (!depsMap) return // 没有依赖（没有响应性的操作）\n  if (key !== undefined) {\n    const dep = depsMap.get(key)\n    triggerEffects(dep)\n  }\n}\n\nexport function triggerEffects(dep) {\n  for (const effect of dep) {\n    if (effect.scheduler) { // computed & watch主线：若当前effect来源于计算或侦听器，要触发计算属性响应更新，执行计算属性中收集的 effect\n      return effect.scheduler()\n    } else {\n      effect.run() // 主线：触发依赖执行更新\n    }\n  }\n}\n\nexport interface ReactiveEffectOptions { lazy?: boolean, scheduler? }\n\nexport function effect(fn, options?: ReactiveEffectOptions) {\n  const _effect = new ReactiveEffect(fn)\n  if (options) {\n    Object.assign(_effect, options)\n  }\n  if (!options || !options.lazy) {\n    _effect.run()\n  }\n  // 处理 强制执行effect（runner()）和注销effect（runner.effect.stop()）的情况\n  const runner = _effect.run.bind(_effect)\n  runner.effect = _effect\n  return runner\n}","import { isObject } from \"@vue/shared\";\nimport { track, trigger } from \"./effect\";\n\nexport const enum ReactiveFlags {\n  SKIP = '__v_skip',\n  IS_REACTIVE = '__v_isReactive',\n  IS_READONLY = '__v_isReadonly',\n  IS_SHALLOW = '__v_isShallow',\n  RAW = '__v_raw'\n}\n\nfunction createGetter(isReadonly = false, shallow = false) {\n  return function get(target, key, receiver) {\n    if (key === ReactiveFlags.IS_REACTIVE) {\n      return !isReadonly\n    } else if (key === ReactiveFlags.IS_READONLY) {\n      return isReadonly\n    } else if (key === ReactiveFlags.IS_SHALLOW) {\n      return shallow\n    } else if ( // 将被代理对象转为原始对象条件\n      key === ReactiveFlags.RAW &&\n      receiver ===\n        (isReadonly\n          ? shallow\n            ? shallowReadonlyMap\n            : readonlyMap\n          : shallow\n            ? shallowReactiveMap\n            : reactiveMap\n        ).get(target)\n    ) {\n      return target\n    }\n    \n    const res = Reflect.get(target, key, receiver)\n    if (!isReadonly) {\n      track(target, key) // 主线：依赖收集\n    }\n    if (shallow) {\n      return res // shallow 不递归代理嵌套对象\n    }\n    if (isObject(res)) {\n      // 读取嵌套对象时递归收集依赖：Convert returned value into a proxy as well. we do the isObject check\n      // here to avoid invalid value warning. Also need to lazy access readonly\n      // and reactive here to avoid circular dependency.\n      return isReadonly ? readonly(res) : reactive(res)\n    }\n    return res\n  }\n}\n\nfunction createSetter() {\n  return function set(target, key, value, receiver) {\n    const oldValue = target[key]\n    const result = Reflect.set(target, key, value, receiver)\n    if (oldValue !== value) trigger(target, key) // 主线：依赖触发\n    return result\n  }\n}\n\nconst get = createGetter()\nconst shallowGet = createGetter(false, true)\nconst readonlyGet = createGetter(true)\nconst shallowReadonlyGet = createGetter(true, true)\nconst set = createSetter()\n\nexport const mutableHandlers = { get, set }\n// in shallow mode, objects are set as-is regardless of reactive or not\nexport const shallowReactiveHandlers = Object.assign( {}, mutableHandlers, { get: shallowGet } )\nexport const readonlyHandlers = {\n  get: readonlyGet,\n  set(target, key) {\n    return true\n  },\n  deleteProperty(target, key) {\n    return true\n  }\n}\nexport const shallowReadonlyHandlers = Object.assign( {}, readonlyHandlers, { get: shallowReadonlyGet } )\n\nconst reactiveMap = new WeakMap()\nconst shallowReactiveMap = new WeakMap()\nconst readonlyMap = new WeakMap()\nconst shallowReadonlyMap = new WeakMap()\n\nfunction createReactiveObject(target, isReadonly, baseHandlers, proxyMap) {\n  if (!isObject(target)) return target\n  // target is already a Proxy, return it.代理已经被代理过的对象 直接返回（原理：代理对象读取 ReactiveFlags.RAW属性会返回原始对象，为 true）\n  // exception: calling readonly() on a reactive object. 要考虑已代理对象转readonly的情况，判断是否已为只读对象，否则会直接返回代理对象\n  if (target[ReactiveFlags.RAW] && !(isReadonly && target[ReactiveFlags.IS_REACTIVE])) {\n    return target\n  }\n\n  const existingProxy = proxyMap.get(target) // 解决重复代理同一对象问题（原理：使用 WeakMap 缓存）\n  if (existingProxy) return existingProxy\n\n  const proxy = new Proxy(target, baseHandlers) // 主线\n  proxyMap.set(target, proxy) // 缓存\n  return proxy\n}\n\nexport function reactive(target) {\n  return createReactiveObject(target, false, mutableHandlers, reactiveMap)\n}\nexport function shallowReactive(target) {\n  return createReactiveObject(target, false, shallowReactiveHandlers, shallowReactiveMap)\n}\nexport function readonly(target) {\n  return createReactiveObject(target, true, readonlyHandlers, readonlyMap)\n}\nexport function shallowReadonly(target) {\n  return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyMap)\n}\n\n// 获取被代理对象的原始对象\nexport function toRaw(observed) {\n  const raw = observed && observed[ReactiveFlags.RAW]\n  return raw ? toRaw(raw) : observed\n}\nexport const toReactive = value =>\n  isObject(value) ? reactive(value) : value\n// 标记对象不可被代理\nexport function markRaw(value) {\n  Object.defineProperty(value, ReactiveFlags.SKIP, {\n    configurable: true,\n    enumerable: false,\n    value\n  })\n  return value\n}\n\nexport function isReactive(value: unknown): boolean {\n  if (isReadonly(value)) {\n    return isReactive(value[ReactiveFlags.RAW])\n  }\n  return !!(value && value[ReactiveFlags.IS_REACTIVE])\n}\n\nexport function isShallow(value: unknown): boolean {\n  return !!(value && value[ReactiveFlags.IS_SHALLOW])\n}\n\nexport function isReadonly(value: unknown): boolean {\n  return !!(value && value[ReactiveFlags.IS_READONLY])\n}\n","import { isFunction } from \"@vue/shared\";\nimport { ReactiveEffect, activedEffect, trackEffects, triggerEffects } from \"./effect\";\n\nclass ComputedRefImpl {\n  public dep // 引用了当前计算属性的 effect\n  private _value // 计算属性的值\n  public _dirty = true // 缓存控制开关，默认没有缓存（未被同步的脏数据）\n  public readonly effect // 计算属性要根据用到的响应属性自动更新，就要内置自己的 effect来让响应属性收集到依赖列表中（作为观察者订阅更新）\n  public readonly __v_isRef = true\n\n  constructor(getter, private readonly _setter) {\n    // getter中的响应属性变更时，它的 trigger() 会执行之前收集到的计算属性的getter，但并不会响应式地执行此计算属性的依赖，\n    // 所以要加入第二个参数 scheduler函数以手动执行收集的 effect\n    this.effect = new ReactiveEffect(getter, () => {\n      this._dirty = true\n      triggerEffects(this.dep) // 主线3：计算属性的依赖属性更新后，用到了计算属性的依赖也要执行\n    })\n  }\n  // 类的属性访问器，底层为 defineProperty\n  get value() {\n    if (activedEffect) { // 主线1：收集计算属性自己的依赖（计算属性如果是在其他 effect中被读取，要收集那些 effect，以便将来响应更新）\n      trackEffects(this.dep || (this.dep = new Set()))\n    }\n    if (this._dirty) {\n      this._value = this.effect.run() // 主线2：执行（用户传入的）getter得到结果，同时因为内部会读取某响应性属性，this.effect 将作为那个响应性属性的依赖被收集起来\n      this._dirty = false // 缓存，避免多次取值时（getter中的响应属性不变的情况下）多次无意义地重新执行getter\n    }\n    return this._value\n  }\n  set value(newValue) {\n    this._setter(newValue)\n  }\n}\n\nexport function computed(getterOrOptions) {\n  let getter, setter\n  const onlyGetter = isFunction(getterOrOptions)\n  if (onlyGetter) {\n    getter = getterOrOptions\n    setter = () => {}\n  } else {\n    getter = getterOrOptions.get\n    setter = getterOrOptions.set\n  }\n  return new ComputedRefImpl(getter, setter)\n}","import { toReactive } from \"./reactive\";\nimport { activedEffect, trackEffects, triggerEffects } from \"./effect\";\n\nclass RefImp {\n  public dep // 通过.value收集的 effect\n  private _value // ref的值\n  public readonly __v_isRef = true // 处理 已经添加过响应的值 直接返回（原理：createRef中 value.__v_isRef 返回 true）\n  \n  constructor(private _rawValue, public readonly __v_isShallow) {\n    this._value = __v_isShallow ? _rawValue : toReactive(_rawValue) // 如果是对象要转为reactive，对象内部依赖收集是通过reactive实现的，而非“.value”的依赖收集\n  }\n  get value() {\n    if (activedEffect) {\n      trackEffects(this.dep || (this.dep = new Set())) // 主线：简单类型的依赖收集（只收集.value的响应）\n    }\n    return this._value\n  }\n  set value(newVal) {\n    const useDirectValue = this.__v_isShallow || newVal.__v_isShallow || newVal.__v_isReadonly\n    if (newVal !== this._rawValue) {\n      this._rawValue = newVal\n      this._value = useDirectValue ? newVal : toReactive(newVal) // 如果是对象要转为reactive，同上，对象内部响应触发是通过reactive实现的\n      triggerEffects(this.dep) // 主线：简单类型的依赖触发（只触发.value的赋值）\n    }\n  }\n}\n\nfunction createRef(value, shallow) {\n  if (isRef(value)) {\n    return value\n  }\n  return new RefImp(value, shallow)\n}\n\nexport function ref(value) {\n  return createRef(value, false)\n}\n\nexport function shallowRef(value?: unknown) {\n  return createRef(value, true)\n}\n\nexport function unref(ref) {\n  return isRef(ref) ? ref.value : ref\n}\n\nexport function isRef(r) {\n  return !!(r && r.__v_isRef === true)\n}\n","import { isObject, isString, ShapeFlags } from \"@vue/shared\";\r\nexport function createVNode(type, props, children = null) { // h('div',{},['hellozf','hellozf'])\r\n\r\n  const shapeFlag = isObject(type)\r\n    ? ShapeFlags.COMPONENT\r\n    : isString(type)\r\n      ? ShapeFlags.ELEMENT\r\n      : 0\r\n\r\n  // 虚拟节点就是 用一个对象来描述信息的\r\n  const vnode = { // 跨平台\r\n    __v_isVNode: true,\r\n    type,\r\n    shapeFlag,\r\n    props,\r\n    children,\r\n    key: props && props.key, // key值\r\n    component: null, // 如果是组件的虚拟节点要保存组件的实例\r\n    el: null, // 虚拟节点对应的真实节点\r\n  }\r\n  if(children){\r\n    // 告诉此节点 是什么样的儿子 \r\n    // 稍后渲染虚拟节点的时候 可以判断儿子是数组 就循环渲染\r\n    vnode.shapeFlag |= isString(children) ? ShapeFlags.TEXT_CHILDREN:ShapeFlags.ARRAY_CHILDREN\r\n  }\r\n  // vnode 就可以描述出来 当前他是一个什么样的节点 儿子是什么样的\r\n  return vnode; // createApp(App)\r\n}\r\nexport function isVNode(vnode){\r\n    return !!vnode.__v_isVNode\r\n}\r\n\r\nexport const Text = Symbol();\r\nexport function normalizeVNode(vnode){\r\n    if(isObject(vnode)){\r\n        return vnode;\r\n    }\r\n    return createVNode(Text,null,String(vnode));\r\n}\r\n\r\nexport function isSameVNodeType(n1,n2){\r\n    // 比较类型是否一致 比较key是否一致\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}","import { createVNode } from \"./createVNode\";\r\n\r\nexport function createAppAPI(render) {\r\n  return (rootComponent, rootProps) => {\r\n    let isMounted = false;\r\n    const app = {\r\n      mount(container) {\r\n        // 1.创造组件虚拟节点 \r\n        let vnode = createVNode(rootComponent, rootProps); // h函数\r\n        // 2.挂载的核心就是根据传入的组件对象 创造一个组件的虚拟节点 ，在将这个虚拟节点渲染到容器中\r\n        render(vnode, container)\r\n        if (!isMounted) {\r\n          isMounted = true;\r\n        }\r\n      }\r\n    }\r\n    return app\r\n  }\r\n}\r\n","import { reactive } from '@vue/reactivity';\r\nimport { hasOwn, isFunction, isObject } from '@vue/shared';\r\nexport function createComponentInstance(vnode){\r\n    const type = vnode.type; // 用户自己传入的属性\r\n    const instance = {\r\n        vnode, // 实例对应的虚拟节点\r\n        type, // 组件对象\r\n        subTree: null, // 组件渲染的内容   will be set synchronously right after creation\r\n        update: null!, // will be set synchronously right after creation\r\n        ctx: {}, // 组件上下文\r\n        props: {}, // 组件属性\r\n        attrs: {}, // 除了props中的属性 \r\n        slots: {}, // 组件的插槽\r\n        setupState: {}, // setup返回的状态\r\n        propsOptions: type.props, // 属性选项\r\n        proxy: null, // 实例的代理对象\r\n        render:null, // 组件的渲染函数\r\n        emit: null, // 事件触发\r\n        exposed:{}, // 暴露的方法\r\n        isMounted: false // 是否挂载完成\r\n    }\r\n    instance.ctx = {_:instance}; // 也可以直接赋值instance\r\n    return instance;\r\n}\r\nexport function initProps(instance,rawProps){\r\n    const props = {};\r\n    const attrs = {};\r\n    const options = Object.keys(instance.propsOptions); // 用户注册过的, 校验类型\r\n    if(rawProps){\r\n        for(let key in rawProps){\r\n            const value = rawProps[key];\r\n            if(options.includes(key)){\r\n                props[key] = value;\r\n            }else{\r\n                attrs[key] = value\r\n            }\r\n        }\r\n    }\r\n    instance.props = reactive(props);\r\n    instance.attrs = attrs; // 这个attrs 是非响应式的\r\n}\r\n\r\nfunction createSetupContext(instance){\r\n    return {\r\n        attrs:instance.attrs,\r\n        slots:instance.slots,\r\n        emit:instance.emit,\r\n        expose:(exposed) =>instance.exposed = exposed || {}\r\n    }\r\n}\r\nconst PublicInstanceProxyHandlers = {\r\n    get({_:instance},key){\r\n        const {setupState,props} = instance;  // 同名 props 和状态同名   通过proxy 可以直接访问状态和属性\r\n        if(hasOwn(setupState,key)){\r\n            return setupState[key];\r\n        }else if(hasOwn(props,key)){\r\n            return props[key];\r\n        }else{\r\n            // ....\r\n        }\r\n    },\r\n    set({_:instance},key,value){\r\n        const {setupState,props} = instance; // 属性不能修改\r\n        if(hasOwn(setupState,key)){\r\n             setupState[key] = value;\r\n        }else if(hasOwn(props,key)){\r\n            console.warn('Props are readonly')\r\n            return false;\r\n        }else{\r\n            // ....\r\n        }\r\n        return true\r\n    }\r\n}\r\nexport function setupStatefulComponent(instance){\r\n    // 核心就是调用组件的setup方法\r\n    const Component = instance.type;\r\n    const {setup} = Component;\r\n    instance.proxy = new Proxy(instance.ctx,PublicInstanceProxyHandlers); // proxy就是代理的上下文\r\n    if(setup){\r\n        const setupContext = createSetupContext(instance);\r\n        let setupResult = setup(instance.props,setupContext); /// 获取setup的返回值\r\n        if(isFunction(setupResult)){\r\n            instance.render = setupResult; // 如果setup返回的是函数那么就是render函数\r\n        }else if(isObject(setupResult)){\r\n            instance.setupState = setupResult;\r\n        }\r\n    }\r\n    if(!instance.render){\r\n        // 如果setup没有写render，可能写的是template，要做模板编译\r\n        // 或用户自己写了 rander\r\n        instance.render = Component.render;\r\n    }\r\n}\r\n\r\nexport function setupComponent(instance){\r\n    const  {props,children} = instance.vnode;\r\n    // 组件的props 做初始化  attrs也要初始化\r\n    initProps(instance,props)\r\n    // 插槽的初始化\r\n    // initSlots(instance,children) ...\r\n    setupStatefulComponent(instance); // 这个方法的目的就是调用setup函数 拿到返回值给 setupState 或 render\r\n\r\n}","\r\n// runtime-core  根平台无关的运行时  \r\nimport { ShapeFlags } from '@vue/shared'\r\nimport { ReactiveEffect } from '@vue/reactivity';\r\nimport { createAppAPI } from './apiCreateApp'\r\nimport { createComponentInstance, setupComponent } from './component';\r\nimport { isSameVNodeType, normalizeVNode, Text } from './createVNode';\r\n\r\nexport function createRenderer(renderOptions) { // runtime-core   renderOptionsDOMAPI -> rootComponent -> rootProps -> container\r\n  const {\r\n    insert: hostInsert,\r\n    remove: hostRemove,\r\n    patchProp: hostPatchProp,\r\n    createElement: hostCreateElement,\r\n    createText: hostCreateText,\r\n    createComment: hostCreateComment,\r\n    setText: hostSetText,\r\n    setElementText: hostSetElementText,\r\n    parentNode: hostParentNode,\r\n    nextSibling: hostNextSibling,\r\n  } = renderOptions;\r\n\r\n  // 创建渲染effect\r\n  const setupRenderEffect = (initialVNode, instance, container) => {\r\n    // 核心就是调用render，数据变化 就重新调用render \r\n    const componentUpdateFn = () => {\r\n      let { proxy } = instance; //  render中的参数\r\n      if (!instance.isMounted) {\r\n        // 组件初始化的流程\r\n        // 真正渲染组件，渲染的其实是subTree\r\n        // 调用render方法 （渲染页面的时候会进行取值操作，那么取值的时候会进行依赖收集，收集对应的effect，稍后属性变化了会重新执行当前方法）\r\n        const subTree = instance.subTree = instance.render.call(proxy, proxy); // 渲染的时候会调用 h 方法\r\n        patch(null, subTree, container);\r\n        // patch渲染完subTree 会生成真实根节点之后挂载到 subTree.el\r\n        initialVNode.el = subTree.el\r\n        instance.isMounted = true;\r\n      } else {\r\n        // 组件更新的流程 。。。\r\n        // diff算法   比较前后的两颗树 \r\n        const prevTree = instance.subTree;\r\n        const nextTree = instance.render.call(proxy, proxy); // 重新渲染\r\n        patch(prevTree, nextTree, container); // 比较两棵树\r\n      }\r\n    }\r\n    const effect = new ReactiveEffect(componentUpdateFn);\r\n    // 默认调用（force）update方法 就会执行componentUpdateFn\r\n    const update = instance.update = effect.run.bind(effect);\r\n    update();\r\n  }\r\n  // 组件的挂载流程\r\n  const mountComponent = (initialVNode, container) => {\r\n    // 根据组件的虚拟节点 创造一个真实节点，渲染到容器中\r\n    // 1.我们要给组件创造一个组件的实例\r\n    const instance = initialVNode.component = createComponentInstance(initialVNode);\r\n    // 2. 需要给组件的实例进行赋值操作\r\n    setupComponent(instance); // 给实例赋予属性\r\n    // 3.调用render方法实现 组件的渲染逻辑。 如果依赖的状态发生变化 组件要重新渲染\r\n    // effect 可以用在组件中，这样数据变化后可以自动重新的执行effect函数\r\n    setupRenderEffect(initialVNode, instance, container); // 渲染effect\r\n  }\r\n  // 组建的生成、更新\r\n  const processComponent = (n1, n2, container) => {\r\n    if (n1 == null) {\r\n      // 组件的初始化\r\n      mountComponent(n2, container);\r\n    } else {\r\n      // 组件的更新\r\n      // updateComponent(n1, n2)\r\n    }\r\n  }\r\n\r\n  const mountChildren = (children, container) => {\r\n    // 如果是一个文本 可以直接   el.textContnt = 文本2\r\n    // ['文本1','文本2']   两个文本 需要 创建两个文本节点 塞入到我们的元素中\r\n    for (let i = 0; i < children.length; i++) {\r\n      const child = (children[i] = normalizeVNode(children[i]));\r\n      patch(null, child, container); // 如果是文本需要特殊处理\r\n    }\r\n  }\r\n  const mountElement = (vnode, container, anchor) => {\r\n    // vnode中的children  可能是字符串 或者是数组\r\n    let { type, props, shapeFlag, children } = vnode; // 获取节点的类型 属性 儿子的形状 children\r\n    // 创建根节点\r\n    let el = vnode.el = hostCreateElement(type)\r\n    // 添加子节点\r\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n      hostSetElementText(el, children)\r\n    } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {  // 按位与\r\n      mountChildren(children, el);\r\n    }\r\n    // 处理属性\r\n    if (props) {\r\n      for (const key in props) {\r\n        hostPatchProp(el, key, null, props[key]); // 给元素添加属性\r\n      }\r\n    }\r\n    // 挂载到DOM\r\n    hostInsert(el, container, anchor);\r\n  }\r\n  // 属性patch\r\n  const patchProps = (oldProps, newProps, el) => {\r\n    if (oldProps === newProps) return;\r\n\r\n    for (let key in newProps) {\r\n      const prev = oldProps[key];\r\n      const next = newProps[key]; // 获取新老属性\r\n      if (prev !== next) {\r\n        hostPatchProp(el, key, prev, next);\r\n      }\r\n    }\r\n    for (const key in oldProps) { // 老的有新的没有  移除老的\r\n      if (!(key in newProps)) {\r\n        hostPatchProp(el, key, oldProps[key], null);\r\n      }\r\n    }\r\n  }\r\n  // 新旧两组子元素patch\r\n  const patchKeyedChildren = (c1, c2, container) => {\r\n    let i = 0\r\n    let e1 = c1.length - 1 // prev ending index\r\n    let e2 = c2.length - 1 // next ending index\r\n    // 1. sync from start\r\n    // (a b) c d\r\n    // (a b) e c d\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[i]\r\n      const n2 = c2[i]\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(n1, n2, container)\r\n      } else {\r\n        break\r\n      }\r\n      i++\r\n    }\r\n    // 2. sync from end\r\n    // a b (c d)\r\n    // a b e (c d)\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[i]\r\n      const n2 = c2[i]\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(n1, n2, container)\r\n      } else {\r\n        break\r\n      }\r\n      c1--\r\n      c2--\r\n    }\r\n    // 3. common sequence + mount\r\n    // (a b) [(c d)]\r\n    // (a b) e ... [(c d)]\r\n    // i = 2, e1 = 1, e2 = 2+\r\n    // (a b)\r\n    // c ... (a b)\r\n    // i = 0, e1 = -1, e2 = 0+\r\n    if (i > e1) {\r\n      if (i <= e2) {\r\n        const nextPos = e2 + 1\r\n        const anchor = nextPos < c2.length ? c2[nextPos].el : null // 判断在哪里新增元素（通过判断是否有参照物）\r\n        while (i <= e2) {\r\n          patch(null, c2[i], container, anchor)\r\n          i++\r\n        }\r\n      }\r\n    } else if (i > e2) {\r\n    // 4. common sequence + unmount\r\n    // (a b) c\r\n    // (a b)\r\n    // i = 2, e1 = 2, e2 = 1\r\n    // a (b c)\r\n    // (b c)\r\n    // i = 0, e1 = 0, e2 = -1\r\n      while (i <= e1) {\r\n        unmount(c1[i])\r\n        i++\r\n      }\r\n    } else {\r\n    // 5. unknown sequence\r\n    // [i ... e1 + 1]: a b [c d e] f g\r\n    // [i ... e2 + 1]: a b [e d c h] f g\r\n    // i = 2, e1 = 4, e2 = 5\r\n      const s1 = i // prev starting index\r\n      const s2 = i // next starting index\r\n\r\n      // 5.1 build key:index map for newChildren：{e:2, d:3, c:4, h:5}\r\n      const keyToNewIndexMap = new Map()\r\n      for (let i = s2; i <= e2; i++) {\r\n        keyToNewIndexMap.set(c2[i].key, i)\r\n      }\r\n\r\n      // used for determining longest stable subsequence\r\n      const toBePatched = e2 - s2 + 1 // 要对比的数量\r\n      const newIndexToOldIndexMap = new Array(toBePatched).fill(0) // [0,0,0,0]\r\n\r\n      // 5.2 loop through old children left to be patched and try to patch\r\n      // matching nodes & remove nodes that are no longer present\r\n      for (let i = s1; i <= e1; i++) {\r\n        const prevChild = c1[i]\r\n        let newIndex = keyToNewIndexMap.get(prevChild.key)\r\n        if (newIndex === undefined) {\r\n          unmount(prevChild) // 移除不需要的旧节点\r\n        } else {\r\n          newIndexToOldIndexMap[newIndex - s2] = i + 1 // [4,3,2,0] 加1是为避免s1为0（0用于判定是否为新增节点）\r\n          patch(prevChild, c2[newIndex], container) // 递归patch相同的节点\r\n        }\r\n      }\r\n\r\n      // 5.3 move and mount\r\n      const increasingNewIndexSequence = getSequence(newIndexToOldIndexMap) // generate longest stable subsequence\r\n      let j = increasingNewIndexSequence.length - 1\r\n      // looping backwards so that we can use last patched node as anchor\r\n      for (i = toBePatched - 1; i >= 0; i--) { \r\n        const nextIndex = s2 + i\r\n        const nextChild = c2[nextIndex]\r\n        const anchor = nextIndex + 1 < c2.length ? c2[nextIndex + 1].el : null\r\n        if (newIndexToOldIndexMap[i] === 0) { // mount新增节点\r\n          patch(null, nextChild, container, anchor)\r\n        } else {\r\n          // 利用 最长递增子序列算法 优化移动复用节点的次数（减少DOM操作）\r\n          if (i !== increasingNewIndexSequence[j]) { // 如果是递增序列元素则无需移动\r\n            hostInsert(nextChild.el, container, anchor)\r\n          } else {\r\n            j--\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const unmountChildren = children => {\r\n    for (let i = 0; i < children.length; i++) {\r\n      unmount(children[i])\r\n    }\r\n  }\r\n  // 子元素对比\r\n  const patchChildren = (n1, n2, container) => {\r\n    const c1 = n1 && n1.children\r\n    const c2 = n2.children\r\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0\r\n    const { shapeFlag } = n2\r\n\r\n    // children has 3 possibilities: text, array or no children.\r\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) { // n2 是 text\r\n      // text children fast path\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        unmountChildren(c1)\r\n      }\r\n      if (c2 !== c1) {\r\n        hostSetElementText(container, c2)\r\n      }\r\n    } else { // n2 是 array or no children\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        // prev children was array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          // two arrays, cannot assume anything, do full diff\r\n          patchKeyedChildren(c1, c2, container)\r\n        } else {\r\n          // no new children, just unmount old\r\n          unmountChildren(c1)\r\n        }\r\n      } else {\r\n        // prev children was text OR null\r\n        // new children is array OR null\r\n        if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n          hostSetElementText(container, '')\r\n        }\r\n        // mount new if array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(c2, container)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const patchElement = (n1, n2) => {\r\n    let el = n2.el = n1.el; // 是同一节点，复用老元素\r\n    const oldProps = n1.props || {};\r\n    const newProps = n2.props || {};\r\n    patchProps(oldProps, newProps, el); // 复用后比较属性\r\n    // 实现比较儿子  diff算法\r\n    patchChildren(n1, n2, el)\r\n  }\r\n  // 组件的生成、更新 最终是 DOM 的生成和更新\r\n  const processElement = (n1, n2, container, anchor) => {\r\n    if (n1 == null) {\r\n      // 初始化、新增元素\r\n      mountElement(n2, container, anchor);\r\n    } else {\r\n      // diff\r\n      patchElement(n1, n2); // 更新两个元素之间的差异\r\n    }\r\n\r\n  }\r\n  const processText = (n1, n2, container) => {\r\n    if (n1 === null) {\r\n      // 文本的初始化 \r\n      let textNode = n2.el = hostCreateText(n2.children);\r\n      hostInsert(textNode, container)\r\n    }\r\n  }\r\n  const unmount = (vnode) => {\r\n    hostRemove(vnode.el); // 删除真实节点即可\r\n  }\r\n  // 比较前后\r\n  const patch = (n1, n2, container, anchor = null) => {\r\n    // 更新时两个元素完全不一样，删除老的元素，创建新的元素\r\n    if (n1 && !isSameVNodeType(n1, n2)) { // n1 有值 再看两个是否是相同节点\r\n      unmount(n1);\r\n      n1 = null;\r\n    }\r\n    if (n1 == n2) return;\r\n    const { shapeFlag, type } = n2; // 初始化：createApp(type)\r\n    switch (type) {\r\n      case Text:\r\n        processText(n1, n2, container);\r\n        break;\r\n      default:\r\n        if (shapeFlag & ShapeFlags.COMPONENT) {\r\n          processComponent(n1, n2, container);\r\n        } else if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          processElement(n1, n2, container, anchor);\r\n        }\r\n    }\r\n  }\r\n  // 初次渲染\r\n  const render = (vnode, container) => { // 将虚拟节点 转化成真实节点渲染到容器中\r\n    patch(null, vnode, container);\r\n  }\r\n\r\n  return {\r\n    createApp: createAppAPI(render), // 创建一个api createApp\r\n    render\r\n  }\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr: number[]): number[] {\r\n  const p = arr.slice()\r\n  const result = [0]\r\n  let i, j, u, v, c\r\n  const len = arr.length\r\n  for (i = 0; i < len; i++) {\r\n    const arrI = arr[i]\r\n    if (arrI !== 0) {\r\n      j = result[result.length - 1]\r\n      if (arr[j] < arrI) {\r\n        p[i] = j\r\n        result.push(i)\r\n        continue\r\n      }\r\n      u = 0\r\n      v = result.length - 1\r\n      while (u < v) {\r\n        c = (u + v) >> 1\r\n        if (arr[result[c]] < arrI) {\r\n          u = c + 1\r\n        } else {\r\n          v = c\r\n        }\r\n      }\r\n      if (arrI < arr[result[u]]) {\r\n        if (u > 0) {\r\n          p[i] = result[u - 1]\r\n        }\r\n        result[u] = i\r\n      }\r\n    }\r\n  }\r\n  u = result.length\r\n  v = result[u - 1]\r\n  while (u-- > 0) {\r\n    result[u] = v\r\n    v = p[v]\r\n  }\r\n  return result\r\n}","import { isObject } from \"@vue/shared\";\r\nimport { isVNode, createVNode } from \"./createVNode\";\r\n\r\nexport function h(type, propsOrChildren, children) {\r\n  // 写法1.  h('div',{color:red})\r\n  // 写法2.  h('div',h('span'))\r\n  // 写法3   h('div','hello')\r\n  // 写法4：  h('div',['hello','hello'])\r\n  let l = arguments.length;\r\n  if (l === 2) {\r\n    if (isObject(propsOrChildren) && !Array.isArray(propsOrChildren)) {\r\n      if (isVNode(propsOrChildren)) {\r\n        return createVNode(type, null, [propsOrChildren])//  h('div',h('span'))\r\n      }\r\n      return createVNode(type, propsOrChildren);  //  h('div',{color:red})\r\n    } else {\r\n      return createVNode(type, null, propsOrChildren); // h('div','hello')   h('div',['hello','hello'])\r\n    }\r\n  } else {\r\n    if (l > 3) {\r\n      children = Array.prototype.slice.call(arguments, 2);\r\n    } else if (l === 3 && isVNode(children)) {\r\n      children = [children]\r\n    }\r\n    return createVNode(type, propsOrChildren, children);\r\n  }\r\n  // h('div',{},'孩子')\r\n  // h('div',{},['孩子','孩子','孩子'])\r\n  // h('div',{},[h('span'),h('span'),h('span')])\r\n}","const queue = []\nlet isFlushPending = false\n\nexport function queueJob(job) {\n  if (!queue.length || !queue.includes(job)) {\n    queue.push(job)\n    queueFlush()\n  }\n}\n\nfunction queueFlush() {\n  if (!isFlushPending) {\n    isFlushPending = true\n    Promise.resolve().then(flushJobs)\n  }\n}\n\nfunction flushJobs() {\n  isFlushPending = false\n  queue.forEach(job => job())\n  queue.length = 0\n}","import { isRef, isReactive, ReactiveEffect } from \"@vue/reactivity\";\nimport { isFunction, isObject, hasChanged, isSet, isMap, isPlainObject } from \"@vue/shared\";\nimport { queueJob } from \"./scheduler\";\n\nexport function watch(source, cb, options) {\n  return doWatch(source, cb, options)\n}\n\nfunction doWatch(source, cb, { immediate = false, deep = false } = {}) {\n  let getter\n  if (isRef(source)) {\n    getter = () => source.value\n  } else if (isReactive(source)) {\n    getter = () => source\n    deep = true\n  } else if (Array.isArray(source)) {\n    getter = () =>\n      source.map(s => {\n        if (isRef(s)) {\n          return s.value\n        } else if (isFunction(s)) {\n          return s()\n        } else {\n          return s\n        }\n      })\n  } else if (isFunction(source)) {\n    getter = () => source()\n  }\n\n  if (cb && deep) {\n    const baseGetter = getter\n    getter = () => traverse(baseGetter()) // 利用 traverse 读取source触发依赖收集\n  }\n\n  let oldValue\n  const job = () => {\n    if (cb) {\n      const newValue = effect.run()\n      if (deep || hasChanged(newValue, oldValue)) {\n        cb(newValue, oldValue)\n        oldValue = newValue\n      }\n    }\n  }\n  let scheduler = () => queueJob(job) // 用微任务执行\n  const effect = new ReactiveEffect(getter, scheduler)\n\n  // initial run\n  if (cb) {\n    if (immediate) {\n      job()\n    } else {\n      oldValue = effect.run()\n    }\n  } else {\n    effect.run()\n  }\n\n  return () => {\n    effect.stop()\n  }\n}\n\n// 遍历查看value，用于触发响应数据的 getter 从而收集依赖\nexport function traverse(value, seen?: Set<unknown>) {\n  if (!isObject(value)) {\n    return value\n  }\n  seen = seen || new Set()\n  if (seen.has(value)) {\n    return value\n  }\n  seen.add(value)\n  if (isRef(value)) {\n    traverse(value.value, seen)\n  } else if (Array.isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      traverse(value[i], seen)\n    }\n  } else if (isSet(value) || isMap(value)) {\n    value.forEach((v: any) => {\n      traverse(v, seen)\n    })\n  } else if (isPlainObject(value)) {\n    for (const key in value) {\n      traverse(value[key], seen)\n    }\n  }\n  return value\n}"],"names":[],"mappings":";;;EAAM,SAAU,QAAQ,CAAC,KAAK,EAAA;MAC5B,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,CAAA;EACpD,CAAC;EAEK,SAAU,UAAU,CAAC,KAAK,EAAA;EAC9B,IAAA,OAAO,OAAO,KAAK,KAAK,UAAU,CAAA;EACpC,CAAC;EAEK,SAAU,QAAQ,CAAC,KAAK,EAAA;EAC5B,IAAA,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAA;EAClC,CAAC;EAEM,MAAM,YAAY,GAAG,CAAC,KAAc,KACzC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;EAEhC,MAAM,UAAU,GAAG,CAAC,KAAU,EAAE,QAAa,KAClD,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;EAEtB,MAAM,aAAa,GAAG,CAAC,GAAY,KACxC,YAAY,CAAC,GAAG,CAAC,KAAK,iBAAiB,CAAA;EAClC,MAAM,KAAK,GAAG,CAAC,GAAY,KAChC,YAAY,CAAC,GAAG,CAAC,KAAK,cAAc,CAAA;EAC/B,MAAM,KAAK,GAAG,CAAC,GAAY,KAChC,YAAY,CAAC,GAAG,CAAC,KAAK,cAAc,CAAA;EAe/B,MAAM,MAAM,GAAG,CAAC,KAAK,EAAC,GAAG,KAAK,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAC,GAAG,CAAC;;ECtCpF;EACA;EACA;EACA,MAAM,WAAW,GAAG,EAAE,CAAA;EACf,IAAI,aAAa,CAAA;QACX,cAAc,CAAA;MAGzB,WAAmB,CAAA,EAAE,EAAS,SAAU,EAAA;UAArB,IAAE,CAAA,EAAA,GAAF,EAAE,CAAA;UAAS,IAAS,CAAA,SAAA,GAAT,SAAS,CAAC;EAFxC,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,CAAA;EACb,QAAA,IAAA,CAAA,IAAI,GAAG,EAAE,CAAA;OAGR;MACD,GAAG,GAAA;UACD,IAAI,CAAC,IAAI,CAAC,MAAM;EAAE,YAAA,OAAO,IAAI,CAAC,EAAE,CAAA;EAChC,QAAA,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAA;UAC9D,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;cAC/B,IAAI;EACF,gBAAA,WAAW,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,CAAA;EACtC,gBAAA,OAAO,IAAI,CAAC,EAAE,EAAE,CAAA;EACjB,aAAA;EAAS,oBAAA;kBACR,WAAW,CAAC,GAAG,EAAE,CAAA;kBACjB,aAAa,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;EACpD,aAAA;EACF,SAAA;OACF;MACD,IAAI,GAAA;UACF,IAAI,IAAI,CAAC,MAAM,EAAE;EACf,YAAA,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE;EAC3B,gBAAA,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;EACjB,aAAA;EACD,YAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;EACpB,SAAA;OACF;EACF,CAAA;EAED,MAAM,SAAS,GAAG,IAAI,OAAO,EAAE,CAAA;EACf,SAAA,KAAK,CAAC,MAAM,EAAE,GAAG,EAAA;EAC/B,IAAA,IAAI,CAAC,aAAa;EAAE,QAAA,OAAM;MAC1B,IAAI,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;MACnC,IAAI,CAAC,OAAO,EAAE;UACZ,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC,CAAA;EAC3C,KAAA;MACD,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;MAC1B,IAAI,CAAC,GAAG,EAAE;EACR,QAAA,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC,CAAA;EAClC,KAAA;MACD,YAAY,CAAC,GAAG,CAAC,CAAA;EACnB,CAAC;EAEK,SAAU,YAAY,CAAC,GAAG,EAAA;EAC9B,IAAA,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE;EAC3B,QAAA,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA;UACtB,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;EAC7B,KAAA;EACH,CAAC;EAEe,SAAA,OAAO,CAAC,MAAM,EAAE,GAAG,EAAA;MACjC,MAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;EACrC,IAAA,IAAI,CAAC,OAAO;EAAE,QAAA,OAAM;MACpB,IAAI,GAAG,KAAK,SAAS,EAAE;UACrB,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;UAC5B,cAAc,CAAC,GAAG,CAAC,CAAA;EACpB,KAAA;EACH,CAAC;EAEK,SAAU,cAAc,CAAC,GAAG,EAAA;EAChC,IAAA,KAAK,MAAM,MAAM,IAAI,GAAG,EAAE;EACxB,QAAA,IAAI,MAAM,CAAC,SAAS,EAAE;EACpB,YAAA,OAAO,MAAM,CAAC,SAAS,EAAE,CAAA;EAC1B,SAAA;EAAM,aAAA;EACL,YAAA,MAAM,CAAC,GAAG,EAAE,CAAA;EACb,SAAA;EACF,KAAA;EACH,CAAC;EAIe,SAAA,MAAM,CAAC,EAAE,EAAE,OAA+B,EAAA;EACxD,IAAA,MAAM,OAAO,GAAG,IAAI,cAAc,CAAC,EAAE,CAAC,CAAA;EACtC,IAAA,IAAI,OAAO,EAAE;EACX,QAAA,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;EAChC,KAAA;EACD,IAAA,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;UAC7B,OAAO,CAAC,GAAG,EAAE,CAAA;EACd,KAAA;;MAED,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;EACxC,IAAA,MAAM,CAAC,MAAM,GAAG,OAAO,CAAA;EACvB,IAAA,OAAO,MAAM,CAAA;EACf;;EC7EA,SAAS,YAAY,CAAC,UAAU,GAAG,KAAK,EAAE,OAAO,GAAG,KAAK,EAAA;EACvD,IAAA,OAAO,SAAS,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAA;UACvC,IAAI,GAAG,uDAAgC;cACrC,OAAO,CAAC,UAAU,CAAA;EACnB,SAAA;eAAM,IAAI,GAAG,uDAAgC;EAC5C,YAAA,OAAO,UAAU,CAAA;EAClB,SAAA;eAAM,IAAI,GAAG,qDAA+B;EAC3C,YAAA,OAAO,OAAO,CAAA;EACf,SAAA;EAAM,aAAA;EACL,QAAA,GAAG,KAAsB,SAAA;cACzB,QAAQ;EACN,gBAAA,CAAC,UAAU;EACT,sBAAE,OAAO;EACP,0BAAE,kBAAkB;EACpB,0BAAE,WAAW;EACf,sBAAE,OAAO;EACP,0BAAE,kBAAkB;4BAClB,WAAW,EACf,GAAG,CAAC,MAAM,CAAC,EACf;EACA,YAAA,OAAO,MAAM,CAAA;EACd,SAAA;EAED,QAAA,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAA;UAC9C,IAAI,CAAC,UAAU,EAAE;EACf,YAAA,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;EACnB,SAAA;EACD,QAAA,IAAI,OAAO,EAAE;cACX,OAAO,GAAG,CAAA;EACX,SAAA;EACD,QAAA,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;;;;EAIjB,YAAA,OAAO,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAA;EAClD,SAAA;EACD,QAAA,OAAO,GAAG,CAAA;EACZ,KAAC,CAAA;EACH,CAAC;EAED,SAAS,YAAY,GAAA;MACnB,OAAO,SAAS,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAA;EAC9C,QAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;EAC5B,QAAA,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAA;UACxD,IAAI,QAAQ,KAAK,KAAK;EAAE,YAAA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;EAC5C,QAAA,OAAO,MAAM,CAAA;EACf,KAAC,CAAA;EACH,CAAC;EAED,MAAM,GAAG,GAAG,YAAY,EAAE,CAAA;EAC1B,MAAM,UAAU,GAAG,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;EAC5C,MAAM,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,CAAA;EACtC,MAAM,kBAAkB,GAAG,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;EACnD,MAAM,GAAG,GAAG,YAAY,EAAE,CAAA;EAEnB,MAAM,eAAe,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;EAC3C;EACuC,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,eAAe,EAAE,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE;EACzF,MAAM,gBAAgB,GAAG;EAC9B,IAAA,GAAG,EAAE,WAAW;MAChB,GAAG,CAAC,MAAM,EAAE,GAAG,EAAA;EACb,QAAA,OAAO,IAAI,CAAA;OACZ;MACD,cAAc,CAAC,MAAM,EAAE,GAAG,EAAA;EACxB,QAAA,OAAO,IAAI,CAAA;OACZ;GACF,CAAA;EACsC,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,gBAAgB,EAAE,EAAE,GAAG,EAAE,kBAAkB,EAAE,EAAE;EAEzG,MAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAA;EACjC,MAAM,kBAAkB,GAAG,IAAI,OAAO,EAAE,CAAA;EACxC,MAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAA;EACjC,MAAM,kBAAkB,GAAG,IAAI,OAAO,EAAE,CAAA;EAExC,SAAS,oBAAoB,CAAC,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,QAAQ,EAAA;EACtE,IAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;EAAE,QAAA,OAAO,MAAM,CAAA;;;MAGpC,IAAI,MAAM,CAAmB,SAAA,yBAAA,IAAI,EAAE,UAAU,IAAI,MAAM,CAA2B,gBAAA,iCAAA,CAAC,EAAE;EACnF,QAAA,OAAO,MAAM,CAAA;EACd,KAAA;MAED,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;EAC1C,IAAA,IAAI,aAAa;EAAE,QAAA,OAAO,aAAa,CAAA;MAEvC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,EAAE,YAAY,CAAC,CAAA;MAC7C,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;EAC3B,IAAA,OAAO,KAAK,CAAA;EACd,CAAC;EAEK,SAAU,QAAQ,CAAC,MAAM,EAAA;MAC7B,OAAO,oBAAoB,CAAC,MAAM,EAAE,KAAK,EAAE,eAAe,EAAE,WAAW,CAAC,CAAA;EAC1E,CAAC;EAIK,SAAU,QAAQ,CAAC,MAAM,EAAA;MAC7B,OAAO,oBAAoB,CAAC,MAAM,EAAE,IAAI,EAAE,gBAAgB,EAAE,WAAW,CAAC,CAAA;EAC1E,CAAC;EAKD;EACM,SAAU,KAAK,CAAC,QAAQ,EAAA;EAC5B,IAAA,MAAM,GAAG,GAAG,QAAQ,IAAI,QAAQ,mCAAmB,CAAA;EACnD,IAAA,OAAO,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAA;EACpC,CAAC;EACM,MAAM,UAAU,GAAG,KAAK,IAC7B,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAA;EAWrC,SAAU,UAAU,CAAC,KAAc,EAAA;EACvC,IAAA,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;EACrB,QAAA,OAAO,UAAU,CAAC,KAAK,CAAA,SAAA,yBAAmB,CAAC,CAAA;EAC5C,KAAA;MACD,OAAO,CAAC,EAAE,KAAK,IAAI,KAAK,CAAA,gBAAA,iCAA2B,CAAC,CAAA;EACtD,CAAC;EAEK,SAAU,SAAS,CAAC,KAAc,EAAA;MACtC,OAAO,CAAC,EAAE,KAAK,IAAI,KAAK,CAAA,eAAA,gCAA0B,CAAC,CAAA;EACrD,CAAC;EAEK,SAAU,UAAU,CAAC,KAAc,EAAA;MACvC,OAAO,CAAC,EAAE,KAAK,IAAI,KAAK,CAAA,gBAAA,iCAA2B,CAAC,CAAA;EACtD;;EC7IA,MAAM,eAAe,CAAA;MAOnB,WAAY,CAAA,MAAM,EAAmB,OAAO,EAAA;UAAP,IAAO,CAAA,OAAA,GAAP,OAAO,CAAA;EAJrC,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,CAAA;UAEJ,IAAS,CAAA,SAAA,GAAG,IAAI,CAAA;;;UAK9B,IAAI,CAAC,MAAM,GAAG,IAAI,cAAc,CAAC,MAAM,EAAE,MAAK;EAC5C,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;EAClB,YAAA,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;EAC1B,SAAC,CAAC,CAAA;OACH;;EAED,IAAA,IAAI,KAAK,GAAA;UACP,IAAI,aAAa,EAAE;EACjB,YAAA,YAAY,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;EACjD,SAAA;UACD,IAAI,IAAI,CAAC,MAAM,EAAE;cACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAA;EAC/B,YAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;EACpB,SAAA;UACD,OAAO,IAAI,CAAC,MAAM,CAAA;OACnB;MACD,IAAI,KAAK,CAAC,QAAQ,EAAA;EAChB,QAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;OACvB;EACF,CAAA;EAEK,SAAU,QAAQ,CAAC,eAAe,EAAA;MACtC,IAAI,MAAM,EAAE,MAAM,CAAA;EAClB,IAAA,MAAM,UAAU,GAAG,UAAU,CAAC,eAAe,CAAC,CAAA;EAC9C,IAAA,IAAI,UAAU,EAAE;UACd,MAAM,GAAG,eAAe,CAAA;EACxB,QAAA,MAAM,GAAG,MAAK,GAAG,CAAA;EAClB,KAAA;EAAM,SAAA;EACL,QAAA,MAAM,GAAG,eAAe,CAAC,GAAG,CAAA;EAC5B,QAAA,MAAM,GAAG,eAAe,CAAC,GAAG,CAAA;EAC7B,KAAA;EACD,IAAA,OAAO,IAAI,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;EAC5C;;EC1CA,MAAM,MAAM,CAAA;MAKV,WAAoB,CAAA,SAAS,EAAkB,aAAa,EAAA;UAAxC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAA;UAAkB,IAAa,CAAA,aAAA,GAAb,aAAa,CAAA;EAF5C,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAA;EAG9B,QAAA,IAAI,CAAC,MAAM,GAAG,aAAa,GAAG,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,CAAA;OAChE;EACD,IAAA,IAAI,KAAK,GAAA;EACP,QAAA,IAAI,aAAa,EAAE;EACjB,YAAA,YAAY,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;EACjD,SAAA;UACD,OAAO,IAAI,CAAC,MAAM,CAAA;OACnB;MACD,IAAI,KAAK,CAAC,MAAM,EAAA;EACd,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,aAAa,IAAI,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,cAAc,CAAA;EAC1F,QAAA,IAAI,MAAM,KAAK,IAAI,CAAC,SAAS,EAAE;EAC7B,YAAA,IAAI,CAAC,SAAS,GAAG,MAAM,CAAA;EACvB,YAAA,IAAI,CAAC,MAAM,GAAG,cAAc,GAAG,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,CAAA;EAC1D,YAAA,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;EACzB,SAAA;OACF;EACF,CAAA;EAED,SAAS,SAAS,CAAC,KAAK,EAAE,OAAO,EAAA;EAC/B,IAAA,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;EAChB,QAAA,OAAO,KAAK,CAAA;EACb,KAAA;EACD,IAAA,OAAO,IAAI,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;EACnC,CAAC;EAEK,SAAU,GAAG,CAAC,KAAK,EAAA;EACvB,IAAA,OAAO,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;EAChC,CAAC;EAUK,SAAU,KAAK,CAAC,CAAC,EAAA;MACrB,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,CAAA;EACtC;;EC/CM,SAAU,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,GAAG,IAAI,EAAA;EAEtD,IAAA,MAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC7B,CAAA;EACD,UAAE,QAAQ,CAAC,IAAI,CAAC;gBACb,CAAA;gBACC,CAAC,CAAA;;EAGP,IAAA,MAAM,KAAK,GAAG;EACZ,QAAA,WAAW,EAAE,IAAI;UACjB,IAAI;UACJ,SAAS;UACT,KAAK;UACL,QAAQ;EACR,QAAA,GAAG,EAAE,KAAK,IAAI,KAAK,CAAC,GAAG;EACvB,QAAA,SAAS,EAAE,IAAI;UACf,EAAE,EAAE,IAAI;OACT,CAAA;EACD,IAAA,IAAG,QAAQ,EAAC;;;EAGV,QAAA,KAAK,CAAC,SAAS,IAAI,QAAQ,CAAC,QAAQ,CAAC,GAAE,CAAA,kCAA0B,EAAA,iCAAyB;EAC3F,KAAA;;MAED,OAAO,KAAK,CAAC;EACf,CAAC;EACK,SAAU,OAAO,CAAC,KAAK,EAAA;EACzB,IAAA,OAAO,CAAC,CAAC,KAAK,CAAC,WAAW,CAAA;EAC9B,CAAC;EAEM,MAAM,IAAI,GAAG,MAAM,EAAE,CAAC;EACvB,SAAU,cAAc,CAAC,KAAK,EAAA;EAChC,IAAA,IAAG,QAAQ,CAAC,KAAK,CAAC,EAAC;EACf,QAAA,OAAO,KAAK,CAAC;EAChB,KAAA;MACD,OAAO,WAAW,CAAC,IAAI,EAAC,IAAI,EAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;EAChD,CAAC;EAEe,SAAA,eAAe,CAAC,EAAE,EAAC,EAAE,EAAA;;EAEjC,IAAA,OAAO,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,CAAC;EACpD;;ECzCM,SAAU,YAAY,CAAC,MAAM,EAAA;EACjC,IAAA,OAAO,CAAC,aAAa,EAAE,SAAS,KAAI;EAElC,QAAA,MAAM,GAAG,GAAG;EACV,YAAA,KAAK,CAAC,SAAS,EAAA;;kBAEb,IAAI,KAAK,GAAG,WAAW,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;;EAElD,gBAAA,MAAM,CAAC,KAAK,EAAE,SAAS,CAAC,CAAA;eAIzB;WACF,CAAA;EACD,QAAA,OAAO,GAAG,CAAA;EACZ,KAAC,CAAA;EACH;;EChBM,SAAU,uBAAuB,CAAC,KAAK,EAAA;EACzC,IAAA,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;EACxB,IAAA,MAAM,QAAQ,GAAG;UACb,KAAK;UACL,IAAI;EACJ,QAAA,OAAO,EAAE,IAAI;EACb,QAAA,MAAM,EAAE,IAAK;EACb,QAAA,GAAG,EAAE,EAAE;EACP,QAAA,KAAK,EAAE,EAAE;EACT,QAAA,KAAK,EAAE,EAAE;EACT,QAAA,KAAK,EAAE,EAAE;EACT,QAAA,UAAU,EAAE,EAAE;UACd,YAAY,EAAE,IAAI,CAAC,KAAK;EACxB,QAAA,KAAK,EAAE,IAAI;EACX,QAAA,MAAM,EAAC,IAAI;EACX,QAAA,IAAI,EAAE,IAAI;EACV,QAAA,OAAO,EAAC,EAAE;UACV,SAAS,EAAE,KAAK;OACnB,CAAA;MACD,QAAQ,CAAC,GAAG,GAAG,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC;EAC5B,IAAA,OAAO,QAAQ,CAAC;EACpB,CAAC;EACe,SAAA,SAAS,CAAC,QAAQ,EAAC,QAAQ,EAAA;MACvC,MAAM,KAAK,GAAG,EAAE,CAAC;MACjB,MAAM,KAAK,GAAG,EAAE,CAAC;EACjB,IAAA,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;EACnD,IAAA,IAAG,QAAQ,EAAC;EACR,QAAA,KAAI,IAAI,GAAG,IAAI,QAAQ,EAAC;EACpB,YAAA,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;EAC5B,YAAA,IAAG,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAC;EACrB,gBAAA,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;EACtB,aAAA;EAAI,iBAAA;EACD,gBAAA,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;EACrB,aAAA;EACJ,SAAA;EACJ,KAAA;EACD,IAAA,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;EACjC,IAAA,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;EAC3B,CAAC;EAED,SAAS,kBAAkB,CAAC,QAAQ,EAAA;MAChC,OAAO;UACH,KAAK,EAAC,QAAQ,CAAC,KAAK;UACpB,KAAK,EAAC,QAAQ,CAAC,KAAK;UACpB,IAAI,EAAC,QAAQ,CAAC,IAAI;EAClB,QAAA,MAAM,EAAC,CAAC,OAAO,KAAI,QAAQ,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE;OACtD,CAAA;EACL,CAAC;EACD,MAAM,2BAA2B,GAAG;EAChC,IAAA,GAAG,CAAC,EAAC,CAAC,EAAC,QAAQ,EAAC,EAAC,GAAG,EAAA;UAChB,MAAM,EAAC,UAAU,EAAC,KAAK,EAAC,GAAG,QAAQ,CAAC;EACpC,QAAA,IAAG,MAAM,CAAC,UAAU,EAAC,GAAG,CAAC,EAAC;EACtB,YAAA,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC;EAC1B,SAAA;EAAK,aAAA,IAAG,MAAM,CAAC,KAAK,EAAC,GAAG,CAAC,EAAC;EACvB,YAAA,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC;EACrB,SAAA;EAAI,aAAA,CAEJ;OACJ;MACD,GAAG,CAAC,EAAC,CAAC,EAAC,QAAQ,EAAC,EAAC,GAAG,EAAC,KAAK,EAAA;UACtB,MAAM,EAAC,UAAU,EAAC,KAAK,EAAC,GAAG,QAAQ,CAAC;EACpC,QAAA,IAAG,MAAM,CAAC,UAAU,EAAC,GAAG,CAAC,EAAC;EACrB,YAAA,UAAU,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;EAC5B,SAAA;EAAK,aAAA,IAAG,MAAM,CAAC,KAAK,EAAC,GAAG,CAAC,EAAC;EACvB,YAAA,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAA;EAClC,YAAA,OAAO,KAAK,CAAC;EAChB,SAAA;EAAI,aAAA,CAEJ;EACD,QAAA,OAAO,IAAI,CAAA;OACd;GACJ,CAAA;EACK,SAAU,sBAAsB,CAAC,QAAQ,EAAA;;EAE3C,IAAA,MAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC;EAChC,IAAA,MAAM,EAAC,KAAK,EAAC,GAAG,SAAS,CAAC;EAC1B,IAAA,QAAQ,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAC,2BAA2B,CAAC,CAAC;EACrE,IAAA,IAAG,KAAK,EAAC;EACL,QAAA,MAAM,YAAY,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;EAClD,QAAA,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAC,YAAY,CAAC,CAAC;EACrD,QAAA,IAAG,UAAU,CAAC,WAAW,CAAC,EAAC;EACvB,YAAA,QAAQ,CAAC,MAAM,GAAG,WAAW,CAAC;EACjC,SAAA;EAAK,aAAA,IAAG,QAAQ,CAAC,WAAW,CAAC,EAAC;EAC3B,YAAA,QAAQ,CAAC,UAAU,GAAG,WAAW,CAAC;EACrC,SAAA;EACJ,KAAA;EACD,IAAA,IAAG,CAAC,QAAQ,CAAC,MAAM,EAAC;;;EAGhB,QAAA,QAAQ,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;EACtC,KAAA;EACL,CAAC;EAEK,SAAU,cAAc,CAAC,QAAQ,EAAA;MACnC,MAAO,EAAC,KAAK,EAAC,QAAQ,EAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;;EAEzC,IAAA,SAAS,CAAC,QAAQ,EAAC,KAAK,CAAC,CAAA;;;EAGzB,IAAA,sBAAsB,CAAC,QAAQ,CAAC,CAAC;EAErC;;EC/FM,SAAU,cAAc,CAAC,aAAa,EAAA;EAC1C,IAAA,MAAM,EACJ,MAAM,EAAE,UAAU,EAClB,MAAM,EAAE,UAAU,EAClB,SAAS,EAAE,aAAa,EACxB,aAAa,EAAE,iBAAiB,EAChC,UAAU,EAAE,cAAc,EAC1B,aAAa,EAAE,iBAAiB,EAChC,OAAO,EAAE,WAAW,EACpB,cAAc,EAAE,kBAAkB,EAClC,UAAU,EAAE,cAAc,EAC1B,WAAW,EAAE,eAAe,GAC7B,GAAG,aAAa,CAAC;;MAGlB,MAAM,iBAAiB,GAAG,CAAC,YAAY,EAAE,QAAQ,EAAE,SAAS,KAAI;;UAE9D,MAAM,iBAAiB,GAAG,MAAK;EAC7B,YAAA,IAAI,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC;EACzB,YAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;;;;EAIvB,gBAAA,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;EACtE,gBAAA,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;;EAEhC,gBAAA,YAAY,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAA;EAC5B,gBAAA,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;EAC3B,aAAA;EAAM,iBAAA;;;EAGL,gBAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC;EAClC,gBAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;kBACpD,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;EACtC,aAAA;EACH,SAAC,CAAA;EACD,QAAA,MAAM,MAAM,GAAG,IAAI,cAAc,CAAC,iBAAiB,CAAC,CAAC;;EAErD,QAAA,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EACzD,QAAA,MAAM,EAAE,CAAC;EACX,KAAC,CAAA;;EAED,IAAA,MAAM,cAAc,GAAG,CAAC,YAAY,EAAE,SAAS,KAAI;;;UAGjD,MAAM,QAAQ,GAAG,YAAY,CAAC,SAAS,GAAG,uBAAuB,CAAC,YAAY,CAAC,CAAC;;EAEhF,QAAA,cAAc,CAAC,QAAQ,CAAC,CAAC;;;UAGzB,iBAAiB,CAAC,YAAY,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;EACvD,KAAC,CAAA;;MAED,MAAM,gBAAgB,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,KAAI;UAC7C,IAAI,EAAE,IAAI,IAAI,EAAE;;EAEd,YAAA,cAAc,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;EAC/B,SAGA;EACH,KAAC,CAAA;EAED,IAAA,MAAM,aAAa,GAAG,CAAC,QAAQ,EAAE,SAAS,KAAI;;;EAG5C,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACxC,YAAA,MAAM,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC1D,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;EAC/B,SAAA;EACH,KAAC,CAAA;MACD,MAAM,YAAY,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,MAAM,KAAI;;EAEhD,QAAA,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;;UAEjD,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAA;;UAE3C,IAAI,SAAS,qCAA6B;EACxC,YAAA,kBAAkB,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAA;EACjC,SAAA;EAAM,aAAA,IAAI,SAAS,GAAA,EAAA,kCAA8B;EAChD,YAAA,aAAa,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;EAC7B,SAAA;;EAED,QAAA,IAAI,KAAK,EAAE;EACT,YAAA,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;EACvB,gBAAA,aAAa,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;EAC1C,aAAA;EACF,SAAA;;EAED,QAAA,UAAU,CAAC,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;EACpC,KAAC,CAAA;;MAED,MAAM,UAAU,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE,KAAI;UAC5C,IAAI,QAAQ,KAAK,QAAQ;cAAE,OAAO;EAElC,QAAA,KAAK,IAAI,GAAG,IAAI,QAAQ,EAAE;EACxB,YAAA,MAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;cAC3B,MAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;cAC3B,IAAI,IAAI,KAAK,IAAI,EAAE;kBACjB,aAAa,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EACpC,aAAA;EACF,SAAA;EACD,QAAA,KAAK,MAAM,GAAG,IAAI,QAAQ,EAAE;EAC1B,YAAA,IAAI,EAAE,GAAG,IAAI,QAAQ,CAAC,EAAE;EACtB,gBAAA,aAAa,CAAC,EAAE,EAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;EAC7C,aAAA;EACF,SAAA;EACH,KAAC,CAAA;;MAED,MAAM,kBAAkB,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,KAAI;UAC/C,IAAI,CAAC,GAAG,CAAC,CAAA;UACT,IAAI,EAAE,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,CAAA;UACtB,IAAI,EAAE,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,CAAA;;;;EAItB,QAAA,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE;EACzB,YAAA,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;EAChB,YAAA,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;EAChB,YAAA,IAAI,eAAe,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;EAC3B,gBAAA,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,CAAA;EACzB,aAAA;EAAM,iBAAA;kBACL,MAAK;EACN,aAAA;EACD,YAAA,CAAC,EAAE,CAAA;EACJ,SAAA;;;;EAID,QAAA,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE;EACzB,YAAA,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;EAChB,YAAA,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;EAChB,YAAA,IAAI,eAAe,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;EAC3B,gBAAA,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,CAAA;EACzB,aAAA;EAAM,iBAAA;kBACL,MAAK;EACN,aAAA;EACD,YAAA,EAAE,EAAE,CAAA;EACJ,YAAA,EAAE,EAAE,CAAA;EACL,SAAA;;;;;;;;UAQD,IAAI,CAAC,GAAG,EAAE,EAAE;cACV,IAAI,CAAC,IAAI,EAAE,EAAE;EACX,gBAAA,MAAM,OAAO,GAAG,EAAE,GAAG,CAAC,CAAA;kBACtB,MAAM,MAAM,GAAG,OAAO,GAAG,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,IAAI,CAAA;kBAC1D,OAAO,CAAC,IAAI,EAAE,EAAE;EACd,oBAAA,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,CAAA;EACrC,oBAAA,CAAC,EAAE,CAAA;EACJ,iBAAA;EACF,aAAA;EACF,SAAA;eAAM,IAAI,CAAC,GAAG,EAAE,EAAE;;;;;;;;cAQjB,OAAO,CAAC,IAAI,EAAE,EAAE;EACd,gBAAA,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;EACd,gBAAA,CAAC,EAAE,CAAA;EACJ,aAAA;EACF,SAAA;EAAM,aAAA;;;;;EAKL,YAAA,MAAM,EAAE,GAAG,CAAC,CAAA;EACZ,YAAA,MAAM,EAAE,GAAG,CAAC,CAAA;;EAGZ,YAAA,MAAM,gBAAgB,GAAG,IAAI,GAAG,EAAE,CAAA;cAClC,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;EAC7B,gBAAA,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;EACnC,aAAA;;cAGD,MAAM,WAAW,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;EAC/B,YAAA,MAAM,qBAAqB,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;;;cAI5D,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;EAC7B,gBAAA,MAAM,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;kBACvB,IAAI,QAAQ,GAAG,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA;kBAClD,IAAI,QAAQ,KAAK,SAAS,EAAE;EAC1B,oBAAA,OAAO,CAAC,SAAS,CAAC,CAAA;EACnB,iBAAA;EAAM,qBAAA;sBACL,qBAAqB,CAAC,QAAQ,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;EAC5C,oBAAA,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,CAAA;EAC1C,iBAAA;EACF,aAAA;;cAGD,MAAM,0BAA0B,GAAG,WAAW,CAAC,qBAAqB,CAAC,CAAA;EACrE,YAAA,IAAI,CAAC,GAAG,0BAA0B,CAAC,MAAM,GAAG,CAAC,CAAA;;EAE7C,YAAA,KAAK,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;EACrC,gBAAA,MAAM,SAAS,GAAG,EAAE,GAAG,CAAC,CAAA;EACxB,gBAAA,MAAM,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC,CAAA;kBAC/B,MAAM,MAAM,GAAG,SAAS,GAAG,CAAC,GAAG,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAA;kBACtE,IAAI,qBAAqB,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;sBAClC,KAAK,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC,CAAA;EAC1C,iBAAA;EAAM,qBAAA;;sBAEL,IAAI,CAAC,KAAK,0BAA0B,CAAC,CAAC,CAAC,EAAE;0BACvC,UAAU,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,CAAA;EAC5C,qBAAA;EAAM,yBAAA;EACL,wBAAA,CAAC,EAAE,CAAA;EACJ,qBAAA;EACF,iBAAA;EACF,aAAA;EACF,SAAA;EACH,KAAC,CAAA;EACD,IAAA,MAAM,eAAe,GAAG,QAAQ,IAAG;EACjC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACxC,YAAA,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;EACrB,SAAA;EACH,KAAC,CAAA;;MAED,MAAM,aAAa,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,KAAI;EAC1C,QAAA,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAA;EAC5B,QAAA,MAAM,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAA;EACtB,QAAA,MAAM,aAAa,GAAG,EAAE,GAAG,EAAE,CAAC,SAAS,GAAG,CAAC,CAAA;EAC3C,QAAA,MAAM,EAAE,SAAS,EAAE,GAAG,EAAE,CAAA;;EAGxB,QAAA,IAAI,SAAS,GAAA,CAAA,iCAA6B;;cAExC,IAAI,aAAa,uCAA8B;kBAC7C,eAAe,CAAC,EAAE,CAAC,CAAA;EACpB,aAAA;cACD,IAAI,EAAE,KAAK,EAAE,EAAE;EACb,gBAAA,kBAAkB,CAAC,SAAS,EAAE,EAAE,CAAC,CAAA;EAClC,aAAA;EACF,SAAA;EAAM,aAAA;cACL,IAAI,aAAa,uCAA8B;;kBAE7C,IAAI,SAAS,uCAA8B;;EAEzC,oBAAA,kBAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,CAAA;EACtC,iBAAA;EAAM,qBAAA;;sBAEL,eAAe,CAAC,EAAE,CAAC,CAAA;EACpB,iBAAA;EACF,aAAA;EAAM,iBAAA;;;kBAGL,IAAI,aAAa,qCAA6B;EAC5C,oBAAA,kBAAkB,CAAC,SAAS,EAAE,EAAE,CAAC,CAAA;EAClC,iBAAA;;kBAED,IAAI,SAAS,uCAA8B;EACzC,oBAAA,aAAa,CAAC,EAAE,EAAE,SAAS,CAAC,CAAA;EAC7B,iBAAA;EACF,aAAA;EACF,SAAA;EACH,KAAC,CAAA;EACD,IAAA,MAAM,YAAY,GAAG,CAAC,EAAE,EAAE,EAAE,KAAI;UAC9B,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;EACvB,QAAA,MAAM,QAAQ,GAAG,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC;EAChC,QAAA,MAAM,QAAQ,GAAG,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC;UAChC,UAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;;EAEnC,QAAA,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;EAC3B,KAAC,CAAA;;MAED,MAAM,cAAc,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,KAAI;UACnD,IAAI,EAAE,IAAI,IAAI,EAAE;;EAEd,YAAA,YAAY,CAAC,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;EACrC,SAAA;EAAM,aAAA;;EAEL,YAAA,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACtB,SAAA;EAEH,KAAC,CAAA;MACD,MAAM,WAAW,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,KAAI;UACxC,IAAI,EAAE,KAAK,IAAI,EAAE;;EAEf,YAAA,IAAI,QAAQ,GAAG,EAAE,CAAC,EAAE,GAAG,cAAc,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;EACnD,YAAA,UAAU,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAA;EAChC,SAAA;EACH,KAAC,CAAA;EACD,IAAA,MAAM,OAAO,GAAG,CAAC,KAAK,KAAI;EACxB,QAAA,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;EACvB,KAAC,CAAA;;EAED,IAAA,MAAM,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,GAAG,IAAI,KAAI;;UAEjD,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;cAClC,OAAO,CAAC,EAAE,CAAC,CAAC;cACZ,EAAE,GAAG,IAAI,CAAC;EACX,SAAA;UACD,IAAI,EAAE,IAAI,EAAE;cAAE,OAAO;UACrB,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;EAC/B,QAAA,QAAQ,IAAI;EACV,YAAA,KAAK,IAAI;EACP,gBAAA,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;kBAC/B,MAAM;EACR,YAAA;kBACE,IAAI,SAAS,iCAAyB;EACpC,oBAAA,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;EACrC,iBAAA;uBAAM,IAAI,SAAS,+BAAuB;sBACzC,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;EAC3C,iBAAA;EACJ,SAAA;EACH,KAAC,CAAA;;EAED,IAAA,MAAM,MAAM,GAAG,CAAC,KAAK,EAAE,SAAS,KAAI;EAClC,QAAA,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;EAChC,KAAC,CAAA;MAED,OAAO;EACL,QAAA,SAAS,EAAE,YAAY,CAAC,MAAM,CAAC;UAC/B,MAAM;OACP,CAAA;EACH,CAAC;EAED;EACA,SAAS,WAAW,CAAC,GAAa,EAAA;EAChC,IAAA,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,CAAA;EACrB,IAAA,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,CAAA;MAClB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;EACjB,IAAA,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,CAAA;MACtB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;EACxB,QAAA,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;UACnB,IAAI,IAAI,KAAK,CAAC,EAAE;cACd,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;EAC7B,YAAA,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE;EACjB,gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;EACR,gBAAA,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;kBACd,SAAQ;EACT,aAAA;cACD,CAAC,GAAG,CAAC,CAAA;EACL,YAAA,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAA;cACrB,OAAO,CAAC,GAAG,CAAC,EAAE;kBACZ,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;kBAChB,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE;EACzB,oBAAA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;EACV,iBAAA;EAAM,qBAAA;sBACL,CAAC,GAAG,CAAC,CAAA;EACN,iBAAA;EACF,aAAA;cACD,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;kBACzB,IAAI,CAAC,GAAG,CAAC,EAAE;sBACT,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;EACrB,iBAAA;EACD,gBAAA,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;EACd,aAAA;EACF,SAAA;EACF,KAAA;EACD,IAAA,CAAC,GAAG,MAAM,CAAC,MAAM,CAAA;EACjB,IAAA,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;EACjB,IAAA,OAAO,CAAC,EAAE,GAAG,CAAC,EAAE;EACd,QAAA,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;EACb,QAAA,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;EACT,KAAA;EACD,IAAA,OAAO,MAAM,CAAA;EACf;;WClXgB,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,QAAQ,EAAA;;;;;EAK/C,IAAA,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC;MACzB,IAAI,CAAC,KAAK,CAAC,EAAE;EACX,QAAA,IAAI,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;EAChE,YAAA,IAAI,OAAO,CAAC,eAAe,CAAC,EAAE;EAC5B,gBAAA,OAAO,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,eAAe,CAAC,CAAC,CAAA;EAClD,aAAA;cACD,OAAO,WAAW,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;EAC3C,SAAA;EAAM,aAAA;cACL,OAAO,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC;EACjD,SAAA;EACF,KAAA;EAAM,SAAA;UACL,IAAI,CAAC,GAAG,CAAC,EAAE;EACT,YAAA,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;EACrD,SAAA;eAAM,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE;EACvC,YAAA,QAAQ,GAAG,CAAC,QAAQ,CAAC,CAAA;EACtB,SAAA;UACD,OAAO,WAAW,CAAC,IAAI,EAAE,eAAe,EAAE,QAAQ,CAAC,CAAC;EACrD,KAAA;;;;EAIH;;EC7BA,MAAM,KAAK,GAAG,EAAE,CAAA;EAChB,IAAI,cAAc,GAAG,KAAK,CAAA;EAEpB,SAAU,QAAQ,CAAC,GAAG,EAAA;EAC1B,IAAA,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;EACzC,QAAA,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;EACf,QAAA,UAAU,EAAE,CAAA;EACb,KAAA;EACH,CAAC;EAED,SAAS,UAAU,GAAA;MACjB,IAAI,CAAC,cAAc,EAAE;UACnB,cAAc,GAAG,IAAI,CAAA;UACrB,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;EAClC,KAAA;EACH,CAAC;EAED,SAAS,SAAS,GAAA;MAChB,cAAc,GAAG,KAAK,CAAA;MACtB,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,CAAA;EAC3B,IAAA,KAAK,CAAC,MAAM,GAAG,CAAC,CAAA;EAClB;;WCjBgB,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,OAAO,EAAA;MACvC,OAAO,OAAO,CAAC,MAAM,EAAE,EAAE,EAAE,OAAO,CAAC,CAAA;EACrC,CAAC;EAED,SAAS,OAAO,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,SAAS,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,GAAG,EAAE,EAAA;EACnE,IAAA,IAAI,MAAM,CAAA;EACV,IAAA,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;EACjB,QAAA,MAAM,GAAG,MAAM,MAAM,CAAC,KAAK,CAAA;EAC5B,KAAA;EAAM,SAAA,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE;EAC7B,QAAA,MAAM,GAAG,MAAM,MAAM,CAAA;UACrB,IAAI,GAAG,IAAI,CAAA;EACZ,KAAA;EAAM,SAAA,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;UAChC,MAAM,GAAG,MACP,MAAM,CAAC,GAAG,CAAC,CAAC,IAAG;EACb,YAAA,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;kBACZ,OAAO,CAAC,CAAC,KAAK,CAAA;EACf,aAAA;EAAM,iBAAA,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE;kBACxB,OAAO,CAAC,EAAE,CAAA;EACX,aAAA;EAAM,iBAAA;EACL,gBAAA,OAAO,CAAC,CAAA;EACT,aAAA;EACH,SAAC,CAAC,CAAA;EACL,KAAA;EAAM,SAAA,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE;EAC7B,QAAA,MAAM,GAAG,MAAM,MAAM,EAAE,CAAA;EACxB,KAAA;MAED,IAAI,EAAE,IAAI,IAAI,EAAE;UACd,MAAM,UAAU,GAAG,MAAM,CAAA;UACzB,MAAM,GAAG,MAAM,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAA;EACtC,KAAA;EAED,IAAA,IAAI,QAAQ,CAAA;MACZ,MAAM,GAAG,GAAG,MAAK;EACf,QAAA,IAAI,EAAE,EAAE;EACN,YAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,EAAE,CAAA;cAC7B,IAAI,IAAI,IAAI,UAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE;EAC1C,gBAAA,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;kBACtB,QAAQ,GAAG,QAAQ,CAAA;EACpB,aAAA;EACF,SAAA;EACH,KAAC,CAAA;MACD,IAAI,SAAS,GAAG,MAAM,QAAQ,CAAC,GAAG,CAAC,CAAA;MACnC,MAAM,MAAM,GAAG,IAAI,cAAc,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;;EAGpD,IAAA,IAAI,EAAE,EAAE;EACN,QAAA,IAAI,SAAS,EAAE;EACb,YAAA,GAAG,EAAE,CAAA;EACN,SAAA;EAAM,aAAA;EACL,YAAA,QAAQ,GAAG,MAAM,CAAC,GAAG,EAAE,CAAA;EACxB,SAAA;EACF,KAAA;EAAM,SAAA;UACL,MAAM,CAAC,GAAG,EAAE,CAAA;EACb,KAAA;EAED,IAAA,OAAO,MAAK;UACV,MAAM,CAAC,IAAI,EAAE,CAAA;EACf,KAAC,CAAA;EACH,CAAC;EAED;EACgB,SAAA,QAAQ,CAAC,KAAK,EAAE,IAAmB,EAAA;EACjD,IAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;EACpB,QAAA,OAAO,KAAK,CAAA;EACb,KAAA;EACD,IAAA,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,EAAE,CAAA;EACxB,IAAA,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;EACnB,QAAA,OAAO,KAAK,CAAA;EACb,KAAA;EACD,IAAA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;EACf,IAAA,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;EAChB,QAAA,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;EAC5B,KAAA;EAAM,SAAA,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;EAC/B,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;cACrC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;EACzB,SAAA;EACF,KAAA;WAAM,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;EACvC,QAAA,KAAK,CAAC,OAAO,CAAC,CAAC,CAAM,KAAI;EACvB,YAAA,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;EACnB,SAAC,CAAC,CAAA;EACH,KAAA;EAAM,SAAA,IAAI,aAAa,CAAC,KAAK,CAAC,EAAE;EAC/B,QAAA,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;cACvB,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAA;EAC3B,SAAA;EACF,KAAA;EACD,IAAA,OAAO,KAAK,CAAA;EACd;;;;;;;;;;;;;;;;;;;;;;"}